diff --git a/src/pong.py b/src/pong.py
index 11ab0a6..d3bcc03 100755
--- a/src/pong.py
+++ b/src/pong.py
@@ -6,7 +6,6 @@ import game_object
 from vector import Vector, rect_intersect
 from clock import Clock
 from number_renderer import convert_number
-from consts import WORLD_WIDTH, WORLD_HEIGHT, LED_GPIO_CODE
 from serial import Serial
 
 class Ball(game_object.GameObject):
@@ -27,10 +26,6 @@ class Ball(game_object.GameObject):
         self.intersect_bat(left_bat)
         self.intersect_bat(right_bat)
 
-        rounded_pos = int(self.position.x)
-        for port, status zip(LED_GPIO_CODE, map(lambda x: x == rounded_pos / len(LED_GPIO_CODE), range(len(LED_GPIO_CODE)))):
-            GPIO.output(port, status)
-
     def intersect_bat(self, bat):
         if rect_intersect(self.position, self.size, bat.position, bat.size):
             ball_centre = Vector(self.position.x + self.size.x / 2.0, self.position.y + self.size.y / 2.0)
@@ -74,8 +69,7 @@ class Bat(game_object.GameObject):
 
 class Pong:
     def __init__(self):
-        serial_output = Serial("/dev/ttyAMA0", 38400)
-        self.output = terminal_writer.Writer(serial_output, True)
+        self.output = terminal_writer.Writer(make_square = True)
         self.ball = Ball(Vector(40, 20), Vector(1, 1), Vector(8, 8), terminal_writer.COLOUR_YELLOW)
         self.left_bat = Bat(Vector(3, 18), Vector(1, 3), Vector(0, 0), terminal_writer.COLOUR_GREEN)
         self.right_bat = Bat(Vector(76, 18), Vector(1, 3), Vector(0, 0), terminal_writer.COLOUR_CYAN)
@@ -104,11 +98,6 @@ class Pong:
             self.ball.position = Vector(40, 20)
 
 if __name__ == "__main__":
-    GPIO.setwarnings(False)
-    GPIO.setmode(GPIO.BCM)
-    for i in LED_GPIO_CODE:
-        GPIO.setup(i, GPIO.OUT)
-
     pong = Pong()
     clock = Clock(60.0)
     while True:
